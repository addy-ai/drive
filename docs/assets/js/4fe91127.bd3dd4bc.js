"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3670],{4886:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>s});var o=t(5893),i=t(1151);const r={},l="YAML",a={id:"api/yaml",title:"YAML",description:"There are many ways to configure your YAML doc to support maximal flexibility.",source:"@site/docs/api/yaml.md",sourceDirName:"api",slug:"/api/yaml",permalink:"/docs/api/yaml",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/yaml.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"FAQ",permalink:"/docs/overview/faq"},next:{title:"Command Line",permalink:"/docs/api/cli"}},c={},s=[];function u(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"yaml",children:"YAML"}),"\n",(0,o.jsx)(n.p,{children:"There are many ways to configure your YAML doc to support maximal flexibility."}),"\n",(0,o.jsxs)(n.p,{children:["The basis of your YAML doc will most typically have a ",(0,o.jsx)(n.code,{children:"train"})," object along with any other classes you want to configure"]}),"\n",(0,o.jsx)(n.p,{children:"The Classes being configured like:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'firestore: \n  clientJson: "secrets/firebase_service_client.json"\n  databaseURL: "env:FIREBASE_DATABASE_URL"\n\ndrive:\n  clientJson: "secrets/drive_service_client.json" \n\nemail:\n  password: env:GMAIL_PASSWORD\n  email: env:GMAIL_EMAIL\n\nhuggingface:\n  token: env:HUGGINGFACE_API_KEY \n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"note"}),": CLI based commands will retrieve the YAML doc and merge any args into the root of the yaml doc and processed accordingly."]}),"\n",(0,o.jsx)(n.p,{children:"Example 0: Bespoke example with many settings"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'verbose: true\nfirestore: \n  clientJson: "secrets/firebase_service_client.json"\n  databaseURL: "env:FIREBASE_DATABASE_URL"\n\ndrive:\n  appType: "desktop"\n  clientJson: "secrets/drive_service_client.json" \n  scopes: \n    - "https://www.googleapis.com/auth/drive"\n    - "https://www.googleapis.com/auth/drive.metadata.readonly"\n\nemail:\n  password: env:GMAIL_PASSWORD\n  email: env:GMAIL_EMAIL\n\nhuggingface:\n  hfToken: env:HUGGINGFACE_API_KEY\n  baseModel: vilsonrodrigues/falcon-7b-instruct-sharded\n  trainedModel: karpathic/falcon-7b-instruct-tuned\n  deployToHf: true \n\ntrain:\n  service: firestore\n  query: \n    filterCollectionWithMultipleWhereClauseWithLimit:\n      collection: "chat-state"\n      filterKey: ["type"]\n      filterData: ["customer-inquiry-bot"]\n      operation: ["=="]\n      limit: 5\n  input:\n    value: "chat.0.content"\n  output:\n    value: "chat.1.content"\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Example 1: Training on a CSV with two columns  (or an ",(0,o.jsx)(n.code,{children:"input"})," and ",(0,o.jsx)(n.code,{children:"output"})," column)."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"train:\n  path: ../shared.csv\n"})}),"\n",(0,o.jsx)(n.p,{children:"Example 2: Specify Input and Output values in a CSV"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"train:\n  path: ../shared.csv               - Default Path for Input and Output \n  inputValue: input                 - Attribute to extract from path\n  outpuValue: output \n"})}),"\n",(0,o.jsx)(n.p,{children:"Example 3: Attribute to extract from path"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"train: \n  inputPath: ../input.csv\n  outputPath: ../output.csv\n  inputValue: input\n  outpuValue: output \n"})}),"\n",(0,o.jsx)(n.p,{children:"Example 4: Attribute to extraxt path using input and output objects"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"train:\n  input: \n    path: ../input.csv \n    value: colname\n  output:\n    path: ../output.csv\n    value: colname\n"})}),"\n",(0,o.jsx)(n.p,{children:"Example 5: Specifying default path for Input and Output"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"train:\n  path: ../shared.csv\n  input:              \n    value: colname\n  output:\n    value: colname\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Querying for data from a ",(0,o.jsx)(n.code,{children:"service"})," is denoted by the ",(0,o.jsx)(n.code,{children:"query"})," attribute placed."]}),"\n",(0,o.jsx)(n.p,{children:"This may be placed as a base object, or nested within a 'input' or 'output' object."}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"query"})," value follows the schema"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"train:\n  service: 'serviceName'\n  query: serviceMethodName : {methodParameters}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Here's an example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'train:\n  service: \'firestore\' \n  query:\n    filterCollectionWithMultipleWhereClauseWithLimit:\n      collection: "chat-state"\n      filterKey: []\n      filterData: []\n      operation: []\n      limit: 5\n  input:\n    value: "chat.0.content"\n  output:\n    value: "chat.1.content"\n\ntrain:\n  service: \'gdrive\' \n  query:\n    getFileByName:\n      filename: \'test123\'\n      mimeType: \'application/msword\'\n      directory: false\n      directoryId: false\n  input:\n    value: "input"\n  output:\n    value: "output"\n'})}),"\n",(0,o.jsx)(n.p,{children:"To specify the model you want to train and where to host it:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"huggingface:\n  hfToken: env:HUGGINGFACE_API_KEY\n  baseModel: vilsonrodrigues/falcon-7b-instruct-sharded\n  trainedModel: karpathic/falcon-7b-instruct-tuned\n  deployToHf: true \n"})}),"\n",(0,o.jsx)(n.p,{children:"Here are multiple possible query configurations for the Firestore Service, but please not only 1 can be supported at a time."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'firebase:\n  clientJson: "secrets/firebase_service_client.json"\n  databaseURL: "env:FIREBASE_DATABASE_URL" \n  query:\n    filterCollectionWithWhereClause:\n      collection: "organizations"\n      filterKey: "organizationId"\n      filterData: organizationId\n      operation: "=="\n    getDocInSubCollection:\n      collection1: "your_collection1_name"\n      doc1: "your_doc1_name"\n      collection2: "your_collection2_name"\n      doc2: "your_doc2_name"\n    getAllDocumentsInCollectionReference:\n      ref: "your_reference"\n      collection: "your_collection_name"\n    filterCollectionWithWhereClauseWithID:\n      collection: "your_collection_name"\n      filterKey: "your_filter_key"\n      filterData: "your_filter_data"\n      operation: "your_operation"\n    filterCollectionWithWhereClauseIncludeDocID:\n      collection: "your_collection_name"\n      filterKey: "your_filter_key"\n      filterData: "your_filter_data"\n      operation: "your_operation"\n    filterCollectionWithWhereClause:\n      collection: "your_collection_name"\n      filterKey: "your_filter_key"\n      filterData: "your_filter_data"\n      operation: "your_operation"\n    filterCollectionWithMultipleWhereClause:\n      collection: "your_collection_name"\n      filterKey: ["your_filter_key1", "your_filter_key2"]\n      filterData: ["your_filter_data1", "your_filter_data2"]\n      operation: ["your_operation1", "your_operation2"]\n    filterCollectionWithMultipleWhereClauseWithLimit:\n      collection: "your_collection_name"\n      filterKey: ["your_filter_key1", "your_filter_key2"]\n      filterData: ["your_filter_data1", "your_filter_data2"]\n      operation: ["your_operation1", "your_operation2"]\n      limit: your_limit\n    filterCollectionWithMultipleWhereClauseIncludeDocID:\n      collection: "your_collection_name"\n      filterKey: ["your_filter_key1", "your_filter_key2"]\n      filterData: ["your_filter_data1", "your_filter_data2"]\n      operation: ["your_operation1", "your_operation2"]\n    filterSubCollectionWithMultipleWhereClauseIncludeDocID:\n      collection1: "your_collection1_name"\n      doc1: "your_doc1_name"\n      collection2: "your_collection2_name"\n      filterKey: ["your_filter_key1", "your_filter_key2"]\n      filterData: ["your_filter_data1", "your_filter_data2"]\n      operation: ["your_operation1", "your_operation2"]\n\n    filterCollectionWithMultipleWhereClauseWithLimit:\n      collection: "applications"\n      filterKey: ["appType", "backgroundResponse"]\n      filterData: ["ai-email-assistant", true]\n      operation: ["==", "=="]\n      limit: 5\n      \n  output:\n    filterCollectionWithWhereClause:\n      collection: "organizations"\n      filterKey: "organizationId"\n      filterData: organizationId\n      operation: "=="\n  \n\n    filterCollectionWithWhereClauseIncludeDocID:\n      collection: collection\n      filterKey: "id"\n      filterData: userID\n      operation: "=="\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>l});var o=t(7294);const i={},r=o.createContext(i);function l(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);