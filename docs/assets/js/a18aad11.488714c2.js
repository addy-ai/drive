"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6359],{8327:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var n=s(5893),r=s(1151);const t={},l="Data Connectors",o={id:"overview/dataconnectors",title:"Data Connectors",description:"Welcome to the Data Connectors Overview! This document offers a detailed guide on the functionalities and capabilities of several Node.js classes, designed to enhance your development experience.",source:"@site/docs/overview/dataconnectors.md",sourceDirName:"overview",slug:"/overview/dataconnectors",permalink:"/docs/overview/dataconnectors",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/overview/dataconnectors.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Introduction",permalink:"/docs/overview/intro"},next:{title:"LLM Tools",permalink:"/docs/overview/llmtools"}},c={},d=[{value:"Firestore Class Overview",id:"firestore-class-overview",level:2},{value:"Class: <code>Firestore</code>",id:"class-firestore",level:3},{value:"Constructor",id:"constructor",level:4},{value:"Key Methods",id:"key-methods",level:4},{value:"EmailRetriever Class Overview",id:"emailretriever-class-overview",level:2},{value:"Class: <code>EmailRetriever</code>",id:"class-emailretriever",level:3},{value:"Constructor",id:"constructor-1",level:4},{value:"Key Methods",id:"key-methods-1",level:4},{value:"Additional Information",id:"additional-information",level:4},{value:"Class: <code>DriveUtils</code>",id:"class-driveutils",level:2},{value:"Constructor",id:"constructor-2",level:3},{value:"Key Methods",id:"key-methods-2",level:3},{value:"Static Methods",id:"static-methods",level:3},{value:"Comments and Additional Information",id:"comments-and-additional-information",level:2}];function a(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"data-connectors",children:"Data Connectors"}),"\n",(0,n.jsx)(i.p,{children:"Welcome to the Data Connectors Overview! This document offers a detailed guide on the functionalities and capabilities of several Node.js classes, designed to enhance your development experience."}),"\n",(0,n.jsx)(i.h2,{id:"firestore-class-overview",children:"Firestore Class Overview"}),"\n",(0,n.jsxs)(i.h3,{id:"class-firestore",children:["Class: ",(0,n.jsx)(i.code,{children:"Firestore"})]}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"Firestore"})," class in Node.js is designed for robust interaction with Firebase Firestore. It supports various operations like querying, adding, updating, and deleting documents in your Firestore database."]}),"\n",(0,n.jsx)(i.h4,{id:"constructor",children:"Constructor"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Parameters"}),":","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"props"})," (Object): Contains the Firestore database instance."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Description"}),":","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Initializes the Firestore class with a database instance."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h4,{id:"key-methods",children:"Key Methods"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"filterCollectionWithWhereClause(...)"})}),": Filters a collection using a where clause."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"addDocumentToCollection(...)"})}),": Adds a new document to a specified collection."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"updateDocument(...)"})}),": Updates an existing document in a collection."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"deleteDocumentFromCollection(...)"})}),": Deletes a document from a collection."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"getAllDocumentsInCollection(...)"})}),": Retrieves all documents from a specified collection."]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h2,{id:"emailretriever-class-overview",children:"EmailRetriever Class Overview"}),"\n",(0,n.jsxs)(i.h3,{id:"class-emailretriever",children:["Class: ",(0,n.jsx)(i.code,{children:"EmailRetriever"})]}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"EmailRetriever"})," class in Node.js is tailored for retrieving emails from different email clients using SMTP configurations. It provides a streamlined approach to email retrieval."]}),"\n",(0,n.jsx)(i.h4,{id:"constructor-1",children:"Constructor"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Parameters"}),":","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"emailAddress"})," (String): The email account's address."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"emailPassword"})," (String): The email account's password."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"emailClient"})," (String): The email client hosting the account."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"verbose"})," (Boolean): Enables verbose error logging."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Description"}),":","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Initializes the ",(0,n.jsx)(i.code,{children:"EmailRetriever"})," with email credentials and client."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h4,{id:"key-methods-1",children:"Key Methods"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"getEmailsInFolder(...)"})}),": Retrieves emails from a specific folder in the email account."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"validateSMTPConfig()"})}),": Validates the SMTP configuration for the email client."]}),"\n"]}),"\n",(0,n.jsx)(i.h4,{id:"additional-information",children:"Additional Information"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"SMTP Configuration"}),": Uses predefined SMTP settings for supported email clients."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Error Handling"}),": Robust error management, especially for unsupported email clients."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"External API Integration"}),": Utilizes external APIs for email retrieval."]}),"\n"]}),"\n",(0,n.jsx)(i.hr,{}),"\n",(0,n.jsx)(i.h1,{id:"driveutils",children:"DriveUtils"}),"\n",(0,n.jsxs)(i.h2,{id:"class-driveutils",children:["Class: ",(0,n.jsx)(i.code,{children:"DriveUtils"})]}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"DriveUtils"})," class in Node.js is designed to interface with Google Drive. It handles authentication, file listing, information retrieval, and file operations using Google APIs."]}),"\n",(0,n.jsx)(i.h3,{id:"constructor-2",children:"Constructor"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Parameters"}),": ",(0,n.jsx)(i.code,{children:"props"})," (Object) containing various configuration options."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Description"}),":","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Initializes the class with properties such as ",(0,n.jsx)(i.code,{children:"client_id"}),", ",(0,n.jsx)(i.code,{children:"client_secret"}),", ",(0,n.jsx)(i.code,{children:"scopes"}),", and ",(0,n.jsx)(i.code,{children:"keyFilePath"}),"."]}),"\n",(0,n.jsx)(i.li,{children:"Handles authentication for different application types (server, desktop, web)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"key-methods-2",children:"Key Methods"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"getDrive()"})}),": Initializes and retrieves the Google Drive instance."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"listFiles(props)"})}),": Lists files in Google Drive based on properties like directory, mime type, etc."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"listDirectories(props)"})}),": Lists all directories or directories within a specific directory."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"getFileInfo(props)"})}),": Retrieves information about a specific file based on provided criteria."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"getFileById(props)"})}),": Retrieves a file by its ID."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"getFileByName(props)"})}),": Retrieves a file by its name."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"createFile(props)"})}),": Creates a file in Google Drive."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"createAndOrGetContent(props)"})}),": Creates or retrieves content based on a given path and other criteria."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"updateFile(props)"})}),": Updates a file in Google Drive."]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"static-methods",children:"Static Methods"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"getAuthUrl(config)"})}),": Generates a Google authentication URL for obtaining access tokens."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"handleAuthCallback(config)"})}),": Handles the authentication callback from Google to get access tokens."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"checkAndRefresh(config)"})}),": Checks and refreshes the access token if it is expired."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"refreshToken(config)"})}),": Refreshes the access token."]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"comments-and-additional-information",children:"Comments and Additional Information"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"The class provides various static and instance methods for handling Google Drive operations."}),"\n",(0,n.jsx)(i.li,{children:"It supports different types of applications like server, desktop, and web."}),"\n",(0,n.jsx)(i.li,{children:"The methods are comprehensive, covering from authentication to"}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},1151:(e,i,s)=>{s.d(i,{Z:()=>o,a:()=>l});var n=s(7294);const r={},t=n.createContext(r);function l(e){const i=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(t.Provider,{value:i},e.children)}}}]);