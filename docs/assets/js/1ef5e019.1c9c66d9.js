"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6583],{4445:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>a,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var i=s(5893),t=s(1151);const l={},r="HuggingFace",o={id:"overview/huggingFace_og",title:"HuggingFace",description:"The HuggingFace class in Node.js facilitates interaction with the Hugging Face API for operations such as validating tokens, managing repositories, uploading files, and performing model inference.",source:"@site/docs/overview/huggingFace_og.md",sourceDirName:"overview",slug:"/overview/huggingFace_og",permalink:"/docs/overview/huggingFace_og",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/overview/huggingFace_og.md",tags:[],version:"current",frontMatter:{}},d={},c=[{value:"Class: HuggingFace",id:"class-huggingface",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Method: <code>tokenIsValid()</code>",id:"method-tokenisvalid",level:3},{value:"Method: <code>hubExists()</code>",id:"method-hubexists",level:3},{value:"Method: <code>questionAnswering(model, inputs)</code>",id:"method-questionansweringmodel-inputs",level:3},{value:"Method: <code>createRepo(repoPath, type)</code>",id:"method-createreporepopath-type",level:3},{value:"Method: <code>uploadFile(repoPath, filePath, blob)</code>",id:"method-uploadfilerepopath-filepath-blob",level:3},{value:"Method: <code>deleteFiles(type, name, paths)</code>",id:"method-deletefilestype-name-paths",level:3},{value:"Export",id:"export",level:2},{value:"Comments and TODOs",id:"comments-and-todos",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"huggingface",children:"HuggingFace"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"HuggingFace"})," class in Node.js facilitates interaction with the Hugging Face API for operations such as validating tokens, managing repositories, uploading files, and performing model inference."]}),"\n",(0,i.jsx)(n.h2,{id:"class-huggingface",children:"Class: HuggingFace"}),"\n",(0,i.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"accessToken"})," (String): Access token for Hugging Face API."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"defaultOptions"})," (Object): Default options for the class."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Initializes the class with the provided access token and default options."}),"\n",(0,i.jsxs)(n.li,{children:["Sets up an instance of ",(0,i.jsx)(n.code,{children:"HfInference"})," for model inference tasks."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"method-tokenisvalid",children:["Method: ",(0,i.jsx)(n.code,{children:"tokenIsValid()"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Boolean indicating if the token is valid."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Validates the provided access token by attempting to list models."}),"\n",(0,i.jsx)(n.li,{children:"Logs the process and errors if any."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"method-hubexists",children:["Method: ",(0,i.jsx)(n.code,{children:"hubExists()"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Boolean indicating if the hub exists."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Checks for the existence of a hub by attempting to list models."}),"\n",(0,i.jsx)(n.li,{children:"Handles and logs any errors encountered."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"method-questionansweringmodel-inputs",children:["Method: ",(0,i.jsx)(n.code,{children:"questionAnswering(model, inputs)"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"model"})," (String): The model to use for question answering."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"inputs"})," (String): The inputs for the model."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": The result of the question answering model."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Calls a question-answering model on the Hugging Face platform."}),"\n",(0,i.jsx)(n.li,{children:"Returns the model's response."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"method-createreporepopath-type",children:["Method: ",(0,i.jsx)(n.code,{children:"createRepo(repoPath, type)"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"repoPath"})," (String): The path to the repository."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"})," (String): The type of repository."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Result of repository creation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Creates a repository or folder in the Hugging Face hub."}),"\n",(0,i.jsx)(n.li,{children:"Handles different repository types."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"method-uploadfilerepopath-filepath-blob",children:["Method: ",(0,i.jsx)(n.code,{children:"uploadFile(repoPath, filePath, blob)"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"repoPath"})," (String): The repository path."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"filePath"})," (String): The file path."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"blob"})," (Blob): The file content."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Result of file upload."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Uploads a file to the specified repository in the Hugging Face hub."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"method-deletefilestype-name-paths",children:["Method: ",(0,i.jsx)(n.code,{children:"deleteFiles(type, name, paths)"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"})," (String): Type of repository or space."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"})," (String): The path to the repo or space."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"paths"})," (Array): File paths to delete."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),": Result of file deletion."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Deletes files in the specified repository or space on the Hugging Face hub."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"export",children:"Export"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"HuggingFace"})," class is exported for use in other modules."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"comments-and-todos",children:"Comments and TODOs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The code includes TODO comments outlining future goals like updating models, connecting models to inference endpoints, checking for space existence, and managing space resources."}),"\n",(0,i.jsx)(n.li,{children:"These comments link to relevant documentation for further guidance on these tasks."}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>r});var i=s(7294);const t={},l=i.createContext(t);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);